package com.example.vehiclerecognition.domain.validation\n\n/**\n * Validator for Israeli license plate formats.\n * Supports formats: NN-NNN-NN, NNN-NN-NNN, N-NNNN-NN (N is a digit).\n * As per FR 1.6 and FR 1.11.\n */\nobject LicensePlateValidator {\n\n    private val israeliPlateRegexes = listOf(\n        Regex(\"^\\\\d{2}-\\\\d{3}-\\\\d{2}\$\"), // NN-NNN-NN\n        Regex(\"^\\\\d{3}-\\\\d{2}-\\\\d{3}\$\"), // NNN-NN-NNN\n        Regex(\"^\\\\d{1}-\\\\d{4}-\\\\d{2}\$\")  // N-NNNN-NN\n    )\n\n    /**\n     * Validates if the given license plate string conforms to one of the specified\n     * Israeli license plate formats.\n     *\n     * @param licensePlate The license plate string to validate.\n     * @return True if the license plate is valid, false otherwise.\n     */\n    fun isValid(licensePlate: String): Boolean {\n        if (licensePlate.isBlank()) {\n            return false\n        }\n        return israeliPlateRegexes.any { it.matches(licensePlate) }\n    }\n}\n 